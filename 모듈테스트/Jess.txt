(clear)
(reset)
(watch all)

(deffunction FULL8LJUG () 
  (printout t "8L 항아리를 가득 채워라." crlf) )
(deffunction FULL5LJUG () 
  (printout t "5L 항아리를 가득 채워라." crlf) )
(deffunction FULL3LJUG () 
  (printout t "3L 항아리를 가득 채워라." crlf) )
(deffunction EMPTY8LJUG () 
  (printout t "8L 항아리를 모두 비워라." crlf) )
(deffunction EMPTY5LJUG () 
  (printout t "5L 항아리를 모두 비워라." crlf) )
(deffunction EMPTY3LJUG () 
  (printout t "3L 항아리를 모두 비워라." crlf) )
(deffunction POUR85FULL () 
  (printout t "8L 항아리에서 5L항아리의 아구까지 부어라." crlf) )
(deffunction POUR83FULL () 
  (printout t "8L 항아리에서 3L항아리의 아구까지 부어라." crlf) )
(deffunction POUR58FULL () 
  (printout t "5L 항아리에서 8L항아리의 아구까지 부어라." crlf) )
(deffunction POUR53FULL () 
  (printout t "5L 항아리에서 3L항아리의 아구까지 부어라." crlf) )
(deffunction POUR38FULL () 
  (printout t "3L 항아리에서 8L항아리의 아구까지 부어라." crlf) )
(deffunction POUR35FULL () 
  (printout t "3L 항아리에서 5L항아리의 아구까지 부어라." crlf) )
(deffunction POUR85 () 
  (printout t "8L 항아리에서 5L항아리로 모두 부어라." crlf) )
(deffunction POUR83 () 
  (printout t "8L 항아리에서 3L항아리로 모두 부어라." crlf) )
(deffunction POUR58 () 
  (printout t "5L 항아리에서 8L항아리로 모두 부어라." crlf) )
(deffunction POUR53 () 
  (printout t "5L 항아리에서 3L항아리로 모두 부어라." crlf) )
(deffunction POUR38 () 
  (printout t "3L 항아리에서 8L항아리로 모두 부어라." crlf) )
(deffunction POUR35 () 
  (printout t "3L 항아리에서 5L항아리로 모두 부어라." crlf) )
(deffunction goal () 
  (printout t "8L 항아리에 4L가 채워졌습니다." crlf)
  (printout t ?*wj-visited* crlf) )

(assert (8LJUG 0) )
(assert (5LJUG 0) )
(assert (3LJUG 0) )

(deffunction wj-Str (?8LJug ?5LJug ?3LJug)
  (bind ?wj-Str (str-cat  ?8LJug ?5LJug ?3LJug) )
  ?wj-Str  )

(deffunction add-wj-list (?*wj-visited* ?wj-Str1)
  (bind ?wj-visited2 (create$ ?*wj-visited* ?wj-Str1) ) 
  (return ?wj-visited2)  )

(bind ?*wj-visited* (create$ (wj-Str 0 0 0) ) )

(defrule FULL8LJUG
  ?FULL8L <- (8LJUG ?x&:(< ?x 8) )
  ?FULL5L <- (5LJUG ?y)
  ?FULL3L <- (3LJUG ?z) 
  (test (not (member$ (wj-Str 8 ?y ?z) ?*wj-visited*) ) )    
  =>
  (FULL8LJUG)
  (retract ?FULL8L) 
  (assert (8LJUG 8) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str 8 ?y ?z) ) )
)

(defrule FULL5LJUG
  ?FULL8L <- (8LJUG ?x)
  ?FULL5L <- (5LJUG ?y&:(< ?y 5) )
  ?FULL3L <- (3LJUG ?z) 
  (test (not (member$ (wj-Str ?x 5 ?z) ?*wj-visited*) ) )    
  =>
  (FULL5LJUG)
  (retract ?FULL5L) 
  (assert (5LJUG 5) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x 5 ?z) ) )
)

(defrule FULL3LJUG
  ?FULL8L <- (8LJUG ?x)
  ?FULL5L <- (5LJUG ?y)
  ?FULL3L <- (3LJUG ?z&:(< ?z 3) ) 
  (test (not (member$ (wj-Str ?x ?y 3) ?*wj-visited*) ) )    
  =>
  (FULL3LJUG)
  (retract ?FULL3L) 
  (assert (3LJUG 3) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x ?y 3) ) )
)

(defrule EMPTY8LJUG
  ?EMPTY8L <- (8LJUG ?x&:(> ?x 0) )     
  ?EMPTY5L <- (5LJUG ?y)
  ?EMPTY3L <- (3LJUG ?z)
  (test (not (member$ (wj-Str 0 ?y ?z) ?*wj-visited*) ) )
  =>
  (EMPTY8LJUG)
  (retract ?EMPTY8L)
  (assert (8LJUG 0) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str 0 ?y ?z) ) )
)  

(defrule EMPTY5LJUG
  ?EMPTY8L <- (8LJUG ?x)     
  ?EMPTY5L <- (5LJUG ?y&:(> ?y 0) )
  ?EMPTY3L <- (3LJUG ?z)
  (test (not (member$ (wj-Str ?x 0 ?z) ?*wj-visited*) ) )
  =>
  (EMPTY5LJUG)
  (retract ?EMPTY5L)
  (assert (5LJUG 0) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x 0 ?z) ) )
)

(defrule EMPTY3LJUG
  ?EMPTY8L <- (8LJUG ?x) 
  ?EMPTY5L <- (5LJUG ?y)
  ?EMPTY3L <- (3LJUG ?z&:(> ?z 0) )  
  (test (not (member$ (wj-Str ?x ?y 0) ?*wj-visited*) ) ) 
  =>
  (EMPTY3LJUG)
  (retract ?EMPTY3L)
  (assert (3LJUG 0) )   
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x ?y 0) ) )
)  

(defrule POUR85FULL 
  ?POUR85F1 <- (5LJUG ?y&:(< ?y 5))
  ?POUR85F2 <- (8LJUG ?x&:
    (and (> ?x 0) (>= (+ ?x ?y) 4) )  ) 
  ?3LJUG <- (3LJUG ?z)
  (test (not (member$ (wj-Str (- ?x (- 5 ?y)) 5 ?z ) ?*wj-visited*) ) )  
  =>
  (POUR85FULL)
  (bind ?x (- ?x (- 5 ?y)) )
  (retract ?POUR85F1)
  (retract ?POUR85F2)
  (assert (5LJUG 5) )  
  (assert (8LJUG ?x) )
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x 5 ?z) ) )
) 

(defrule POUR43FULL
  ?POUR43F1 <- (3LJUG ?y&:(< ?y 3) )
  ?POUR43F2 <- (4LJUG ?x&:
    (and (> ?x 0) (>= (+ ?y ?x) 3) )  )  
  ?
  (test (not (member$ (wj-Str (- ?x (- 3 ?y) ) 3) ?*wj-visited*) ) ) 
  =>
  (POUR43FULL)
  (bind ?x (- ?x (- 3 ?y) ) )
  (retract ?POUR43F1)
  (retract ?POUR43F2)
  (assert (4LJUG ?x) )  
  (assert (3LJUG 3) )  
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x 3) ) )
) 

(defrule POUR34
  ?POUR341 <- (4LJUG ?x)
  ?POUR342 <- (3LJUG ?y&:
    (and (> ?y 0) (< (+ ?y ?x) 4) )  )  
  (test (not (member$ (wj-Str (+ ?x ?y) 0) ?*wj-visited*) ) ) 
  =>
  (POUR34)
  (bind ?x (+ ?x ?y) )
  (retract ?POUR341)
  (retract ?POUR342)
  (assert (4LJUG ?x) )  
  (assert (3LJUG 0) )  
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str ?x 0) ) )
) 

(defrule POUR43
  ?POUR432 <- (3LJUG ?y) 
  ?POUR431 <- (4LJUG ?x&:
    (and (> ?x 0) (< (+ ?y ?x) 3) )  ) 
  (test (not (member$ (wj-Str 0 (+ ?x ?y) ) ?*wj-visited*) ) ) 
  =>
  (POUR43)
  (bind ?y (+ ?x ?y) ) 
  (retract ?POUR431)
  (retract ?POUR432)
  (assert (4LJUG 0) )  
  (assert (3LJUG ?y) ) 
  (bind ?*wj-visited* (add-wj-list ?*wj-visited* (wj-Str 0 ?y) ) )
) 

(defrule goal
  (declare (salience 100)) 
  (4LJUG ?x&:(= ?x 2) )    
  =>
  (goal) 
  (halt)  ) 

(run)

